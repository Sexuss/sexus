{"version":3,"sources":["webpack:///./src/pages/blogs.js"],"names":["BlogsPost","props","handleScroll","window","pageYOffset","outerHeight","count","state","NoOfPost","setState","bind","componentDidMount","addEventListener","this","componentWillUnmount","removeEventListener","render","data","keywords","allContentfulBlogs","edges","map","a","node","tags","t","push","tag","Fragment","title","className","style","paddingTop","onScroll","onScrollEvent","slice","items","sizes","featureImage","fluid","publicData","to","slug","author","photo","name","subHeader","React","Component","Blogs","query"],"mappings":"wOAMMA,E,oBACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAeFC,aAAe,WAGb,GAFkBC,OAAOC,YAAc,KAErBD,OAAOE,YAAa,CACpC,IAAIC,EAAQ,EAAKC,MAAMC,SAAW,EAClC,EAAKC,SAAS,CACZD,SAAUF,MApBd,EAAKC,MAAQ,CACXC,SAAU,GAEZ,EAAKN,aAAe,EAAKA,aAAaQ,K,yHAAlB,KALH,E,kHAQnBC,kBAAA,WACER,OAAOS,iBAAiB,SAAUC,KAAKX,e,EAGzCY,qBAAA,WACEX,OAAOY,oBAAoB,SAAUF,KAAKX,e,EAc5Cc,OAAA,WAAU,IAEAC,EAASJ,KAAKZ,MAAdgB,KACAT,EAAaK,KAAKN,MAAlBC,SACFU,EAAW,CAAC,YAAD,uBAGjB,OAFED,EAAKA,KAAKE,mBAAmBC,MAAMC,KAAI,SAACC,GAAD,OAAOA,EAAEC,KAAKC,KAAKH,KAAI,SAACI,GAAD,OAAOP,EAASQ,KAAKD,EAAEE,WAGrF,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOX,SAAUA,IAC5B,wBAAIY,UAAU,YAAYC,MAAO,CAACC,WAAY,KAAMC,SAAUpB,KAAKqB,eAChEjB,EAAKA,KAAKE,mBAAmBC,MAAMe,MAAM,EAAG3B,GAAUa,KAAI,SAAAe,GAAK,OAC9D,4BACE,yBAAKN,UAAU,sCACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAKO,MAAOD,EAAMb,KAAKe,aAAaC,QACpC,yBAAKT,UAAU,aACb,uBAAGA,UAAU,wBACZM,EAAMb,KAAKiB,aAGhB,yBAAKV,UAAU,gBACb,wBAAIA,UAAU,cAAa,kBAAC,OAAD,CAAMW,GAAE,IAAML,EAAMb,KAAKmB,MAASN,EAAMb,KAAKM,QACxE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAAKO,MAAOD,EAAMb,KAAKoB,OAAOC,MAAML,QACpC,4BAAQT,UAAU,QAAQM,EAAMb,KAAKoB,OAAOE,OAE9C,2BAAIT,EAAMb,KAAKuB,oB,GAvDTC,IAAMC,WA6EfC,UAVD,SAAAhC,GAAI,OAEhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKY,MAAM,QAAQX,SAAU,CAAC,SAAD,yBAC7B,yBAAKY,UAAU,uBACb,kBAAC9B,EAAD,CAAWiB,KAAMA,OAOhB,IAAMiC,EAAK","file":"component---src-pages-blogs-js-66c6f8700f0620781a91.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogsPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      NoOfPost: 6\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    var lastScrollY = window.pageYOffset + 1100;\n\n    if (lastScrollY > window.outerHeight) {\n      var count = this.state.NoOfPost + 3;\n      this.setState({\n        NoOfPost: count\n      });\n    }\n  };\n\n  render() {\n\n    const { data } = this.props;\n    const { NoOfPost } = this.state;\n      let keywords = [`sexualitÃ©`, `orgasme`, `feminisme`];\n      data.data.allContentfulBlogs.edges.map((a) => a.node.tags.map((t) => keywords.push(t.tag)));\n\n    return (\n      <React.Fragment>\n        <SEO title=\"Blog\" keywords={keywords}/>\n        <ul className=\"blog-list\" style={{paddingTop: 100}} onScroll={this.onScrollEvent}>\n          {data.data.allContentfulBlogs.edges.slice(0, NoOfPost).map(items => (\n            <li>\n              <div className=\"post-item template-square columned\">\n                <div className=\"post-thumbnail\">\n                  <Img sizes={items.node.featureImage.fluid} />\n                  <div className=\"post-date\">\n                    <i className=\"fas fa-calendar-alt\"></i>\n                    {items.node.publicData}\n                  </div>\n                </div>\n                <div className=\"post-details\">\n                  <h2 className=\"post-title\"><Link to={`/${items.node.slug}`}>{items.node.title}</Link></h2>\n                  <div className=\"author\">\n                    <Img sizes={items.node.author.photo.fluid} />\n                    <strong className=\"name\">{items.node.author.name}</strong>\n                  </div>\n                  <p>{items.node.subHeader}</p>\n\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Blogs = data => (\n\n  <Layout>\n    <SEO title=\"Blogs\" keywords={[`gatsby`, `application`, `react`]} />\n    <div className=\"container blog-page\">\n      <BlogsPost data={data}></BlogsPost>\n    </div>\n  </Layout>\n)\n\nexport default Blogs\n\nexport const query = graphql`\n  query BlogsQuery {\n    allContentfulBlogs {\n        edges {\n          node {\n            id\n            title\n            slug\n            subHeader\n            tags {\n                tag\n            }\n            publicData(formatString: \"MMMM D, YYYY\")\n            author {\n              name\n              photo {\n                fluid(maxWidth: 350) {\n                  base64\n                  aspectRatio\n                  src\n                  srcSet\n                  srcWebp\n                  srcSetWebp\n                  sizes\n                }\n              }\n            }\n            description {\n              childMarkdownRemark {\n                excerpt(pruneLength: 250)\n              }\n            }\n            featureImage {\n              fluid(maxWidth: 1120) {\n                base64\n                aspectRatio\n                src\n                srcSet\n                srcWebp\n                srcSetWebp\n                sizes\n              }\n            }\n          }\n        }\n      }\n  }\n`\n\n\n\n"],"sourceRoot":""}